drop table IF EXISTS FILM_LIKES CASCADE;
drop table IF EXISTS USER_FRIEND CASCADE;
drop table IF EXISTS FILM_GENRES CASCADE;
drop table IF EXISTS GENRES CASCADE;
drop table IF EXISTS MPA CASCADE;
drop table IF EXISTS USERS CASCADE;
drop table IF EXISTS FILMS CASCADE;
drop table IF EXISTS REVIEWS CASCADE;
drop table IF EXISTS REVIEW_LIKES CASCADE;

create TABLE GENRES (
	GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME CHARACTER VARYING(200) NOT NULL
);
create TABLE MPA (
	MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME CHARACTER VARYING(200) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL
);
create TABLE FILMS (
	FILM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME CHARACTER VARYING(200) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER NOT NULL REFERENCES MPA(MPA_ID) ON delete CASCADE
);
create TABLE FILM_GENRES (
    PAIR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_ID INTEGER NOT NULL REFERENCES FILMS(FILM_ID) ON delete CASCADE,
	GENRE_ID INTEGER NOT NULL REFERENCES GENRES(GENRE_ID) ON delete CASCADE
);
create unique index IF NOT EXISTS FILM_GENRE_UINDEX on FILM_GENRES (FILM_ID, GENRE_ID);

create TABLE USERS (
	USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL CHARACTER VARYING(200) NOT NULL,
	LOGIN CHARACTER VARYING(200) NOT NULL,
	NAME CHARACTER VARYING(200) NOT NULL,
	BIRTHDAY DATE NOT NULL
);
create unique index IF NOT EXISTS USER_EMAIL_UINDEX on USERS (email);
create unique index IF NOT EXISTS USER_LOGIN_UINDEX on USERS (login);

create TABLE FILM_LIKES (
    PAIR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_ID INTEGER NOT NULL REFERENCES FILMS(FILM_ID) ON delete CASCADE,
	USER_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON delete CASCADE
);
create unique index IF NOT EXISTS FILM_LIKE_UINDEX on FILM_LIKES (FILM_ID, USER_ID);

create TABLE REVIEWS (
    REVIEW_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID INTEGER NOT NULL REFERENCES FILMS(FILM_ID) ON delete CASCADE,
    USER_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON delete CASCADE,
    REVIEW_BODY CHARACTER VARYING(1000) NOT NULL,
    IS_POSITIVE BOOLEAN NOT NULL,
    USEFUL INTEGER
);

create TABLE REVIEW_LIKES (
    LIKE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REVIEW_ID INTEGER NOT NULL REFERENCES REVIEWS(REVIEW_ID) ON delete CASCADE,
    USER_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON delete CASCADE,
    IS_LIKE BOOLEAN NOT NULL
);

create unique index IF NOT EXISTS REVIEW_LIKE_UINDEX on REVIEW_LIKES (REVIEW_ID, USER_ID);

create TABLE USER_FRIEND (
    PAIR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	USER_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON delete CASCADE,
	FRIEND_ID INTEGER NOT NULL REFERENCES USERS(USER_ID) ON delete CASCADE
);
create unique index IF NOT EXISTS USER_FRIEND_UINDEX on USER_FRIEND (USER_ID, FRIEND_ID);